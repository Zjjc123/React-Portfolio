{"version":3,"sources":["main.14634156.chunk.css","components/header.scss","breakkpoints.scss","variables.scss","App.scss"],"names":[],"mappings":"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","file":"main.14634156.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap);\n.header{position:fixed;width:100%;height:128px;z-index:4}@media (max-width: 425px){.header{height:96px}}.header .logo a{font-size:1.2rem;letter-spacing:.3rem;color:#000;text-decoration:none;font-weight:500}.header .nav{width:25px}@media (max-width: 425px){.header .nav{width:20px}}.header .nav span{margin-bottom:0.3rem;background:#000;height:2px;width:100%;display:block}body,html{-webkit-user-select:none;-ms-user-select:none;user-select:none;background:#fff;-ms-scroll-chaining:none;overscroll-behavior:none;margin:0;font-family:\"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif !important;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.full-container{margin:0 auto;width:100%;max-width:100%;height:100%;display:flex;align-items:center;justify-content:center}.App{text-align:center;box-sizing:border-box}.not-selectable{-webkit-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none}.container{width:1560px;min-width:1560px;margin:0 auto;height:100%}@media (max-width: 1560px){.container{width:1280px;min-width:1280px}}@media (max-width: 1366px){.container{width:1080px;min-width:1080px}}@media (max-width: 1080px){.container{width:100%;min-width:100%}}.container .row{display:flex;height:100%;padding:0 32px}@media (max-width: 425px){.container .row{padding:0 16px}}.container .v-center{align-items:center}.container .space-between{justify-content:space-between}.container-fluid{width:100%;height:100%}.container-fluid .row{display:flex;height:100%}.loading{position:absolute;top:0px;left:0px;width:100%;height:100%;background:#171717;display:flex;align-items:center;justify-content:center;z-index:1000}.loading-bar{position:absolute;top:50%;left:0;height:3px;background:#ffbf4e;margin-left:2%;margin-right:2%}.loading-text{font-size:small;color:#ffbf4e;margin-bottom:50px}.titleBackground{height:100vh;background-position:center;background-repeat:no-repeat;background-size:cover;overflow:hidden;z-index:-100}.background-video{right:0;bottom:0;width:100vw;height:100vh;object-fit:cover;z-index:-100}.heading{position:absolute;top:40%;left:5%;text-align:right;z-index:1}.homeTitle1{font-size:8vw;font-weight:bolder}.homeTitle2{font-size:5vw}.homeTitle3{font-size:3vw}@media screen and (max-width: 991px){.titleBackground{background-position:-40vw;padding-top:0vh}.heading{margin:0;top:40%;transform:translateY(-40%)}.homeTitle1{font-size:14vw;text-align:center}.homeTitle2{font-size:7vw;text-align:center}.homeTitle3{font-size:3vw;text-align:center}}.project-title{font-size:100px;padding-top:100px;padding-bottom:50px}@media screen and (max-width: 991px){.project-title{font-size:50px;padding-top:100px;padding-bottom:25px}}.gallery-title{font-size:75px;margin-left:20px;margin-right:20px}@media screen and (max-width: 991px){.gallery-title{font-size:25px}}.img-grid{display:flex;flex-wrap:wrap;flex-direction:row;align-items:center;justify-content:center;margin-top:30px;margin-left:10vw;margin-right:10vw}.img-wrap{padding-bottom:50px}.img-wrap img{object-fit:cover;object-position:center;width:65vw;height:65vw}@media screen and (min-width: 992px){.img-grid{margin-left:17vw;margin-right:17vw}.img-wrap{padding-bottom:1.5vw;width:100%;width:33%}.img-wrap img{width:20vw;height:20vw}}.card{transition:box-shadow 0.3s;margin:20px}.card:hover{box-shadow:0 0 11px rgba(33,33,33,0.2)}.jumbotron{min-height:100vh;margin:0px !important}#nopadding{padding:0 !important;margin:0 !important}#badge{border:2px solid #ddd;height:50px;width:50px;border-radius:10px !important}@media screen and (min-width: 992px){#aboutText{text-align:left;margin:20px;padding-left:50px}}@media screen and (max-width: 991px){#aboutText{text-align:center;padding-left:15px;padding-right:15px}#about{background-color:transparent}}\n\n",".header {\n    position: fixed;\n    width: 100%;\n    height: 128px;\n    z-index: 4;\n    @include media('<=phone') {\n        height: 96px;\n    }\n    .logo {\n        a {\n            font-size:  1.2rem;\n            letter-spacing: .3rem;\n            color: $black;\n            text-decoration: none;\n            font-weight: 500;\n        }\n    }\n    .nav {\n        width: 25px;\n        @include media('<=phone') {\n            width: 20px;\n        }\n        span {\n            margin-bottom: 0.3rem;\n            background: $black;\n            height: 2px;\n            width: 100%;\n            display: block;\n        }\n    }\n}","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}","$black: #000000;\n$white: #ffffff;","@import url(\"https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap\");\n\n@import \"./breakkpoints.scss\";\n@import \"./variables.scss\";\n\n@import \"./components/header.scss\";\n\nbody,\nhtml {\n  user-select: none;\n  background: $white;\n  overscroll-behavior: none;\n  margin: 0;\n  font-family: \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\",\n    \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif !important;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.full-container {\n  margin: 0 auto;\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.App {\n  text-align: center;\n  box-sizing: border-box;\n}\n\n.not-selectable {\n  -webkit-user-select: none; /* Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+/Edge */\n  user-select: none; /* Standard */\n  pointer-events: none;\n}\n\n.container {\n  width: 1560px;\n  min-width: 1560px;\n  margin: 0 auto;\n  height: 100%;\n  @include media(\"<=1560px\") {\n    width: 1280px;\n    min-width: 1280px;\n  }\n  @include media(\"<=desktop\") {\n    width: 1080px;\n    min-width: 1080px;\n  }\n  @include media(\"<=1080px\") {\n    width: 100%;\n    min-width: 100%;\n  }\n  .row {\n    display: flex;\n    height: 100%;\n    padding: 0 32px;\n    @include media(\"<=phone\") {\n      padding: 0 16px;\n    }\n  }\n  .v-center {\n    align-items: center;\n  }\n  .space-between {\n    justify-content: space-between;\n  }\n}\n\n.container-fluid {\n  width: 100%;\n  height: 100%;\n  .row {\n    display: flex;\n    height: 100%;\n  }\n}\n\n\n\n/* =========== Loading ===========*/\n\n.loading {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background: #171717;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.loading-bar {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  height: 3px;\n  background: #ffbf4e;\n  margin-left: 2%;\n  margin-right: 2%;\n}\n\n.loading-text {\n  font-size: small;\n  color: #ffbf4e;\n  margin-bottom: 50px;\n}\n\n/* =========== About ===========*/\n\n.titleBackground {\n  height: 100vh;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: hidden;\n  z-index: -100;\n}\n\n.background-video {\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  object-fit: cover;\n  z-index: -100;\n}\n\n.heading {\n  position: absolute;\n  top: 40%;\n  left: 5%;\n  text-align: right;\n  z-index: 1;\n}\n\n.homeTitle1 {\n  font-size: 8vw;\n  font-weight: bolder;\n}\n\n.homeTitle2 {\n  font-size: 5vw;\n}\n\n.homeTitle3 {\n  font-size: 3vw;\n}\n\n@media screen and (max-width: 991px) {\n  .titleBackground {\n    background-position: -40vw;\n    padding-top: 0vh;\n  }\n\n  .heading {\n    margin: 0;\n    top: 40%;\n    -ms-transform: translateY(-40%);\n    transform: translateY(-40%);\n  }\n\n  .homeTitle1 {\n    font-size: 14vw;\n    text-align: center;\n  }\n\n  .homeTitle2 {\n    font-size: 7vw;\n    text-align: center;\n  }\n\n  .homeTitle3 {\n    font-size: 3vw;\n    text-align: center;\n  }\n}\n\n/* =========== Projects ===========*/\n\n.project-title {\n  font-size: 100px;\n  padding-top: 100px;\n  padding-bottom: 50px;\n}\n\n@media screen and (max-width: 991px) {\n  .project-title {\n    font-size: 50px;\n    padding-top: 100px;\n    padding-bottom: 25px;\n  }\n}\n\n/* =========== Gallery ===========*/\n\n.gallery-title {\n  font-size: 75px;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n@media screen and (max-width: 991px) {\n  .gallery-title {\n    font-size: 25px;\n  }\n}\n\n.img-grid {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 30px;\n  margin-left: 10vw;\n  margin-right: 10vw;\n}\n.img-wrap {\n  padding-bottom: 50px;\n}\n.img-wrap img {\n  object-fit: cover;\n  object-position: center;\n  width: 65vw;\n  height: 65vw;\n}\n\n@media screen and (min-width: 992px) {\n  .img-grid {\n    margin-left: 17vw;\n    margin-right: 17vw;\n  }\n\n  .img-wrap {\n    padding-bottom: 1.5vw;\n    width: 100%;\n    width: 33%;\n  }\n\n  .img-wrap img {\n    width: 20vw;\n    height: 20vw;\n  }\n}\n\n/* ===== Cards ====*/\n.card {\n  transition: box-shadow 0.3s;\n  margin: 20px;\n}\n\n.card:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n\n/* ===== Page ====*/\n.jumbotron {\n  min-height: 100vh;\n  margin: 0px !important;\n}\n\n#nopadding {\n  padding: 0 !important;\n  margin: 0 !important;\n}\n\n#badge {\n  border: 2px solid #ddd;\n  height: 50px;\n  width: 50px;\n  border-radius: 10px !important;\n}\n\n@media screen and (min-width: 992px) {\n  #aboutText {\n    text-align: left;\n    margin: 20px;\n    padding-left: 50px;\n  }\n}\n@media screen and (max-width: 991px) {\n  #aboutText {\n    text-align: center;\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n\n  #about {\n    background-color: transparent;\n  }\n}\n"]}