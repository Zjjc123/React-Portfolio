{"version":3,"sources":["logo.svg","img/jumbotronSquare.jpg","img/covid-pro-tips.png","img/unite-neat.png","img/vitality.jpg","components/Card.js","pages/Projects.js","pages/About.js","pages/Gallery.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectCard","element","this","props","buttons","map","object","Card","Link","href","link","name","style","width","Img","variant","src","imgSrc","Body","Title","title","Text","description","Component","Projects","Jumbotron","className","Image","id","Background","roundedCircle","fluid","Container","Row","Col","display","justifyContent","require","About","Gallery","Footer","App","basename","process","Navbar","bg","expand","Brand","logo","height","alt","Toggle","aria-controls","Collapse","Nav","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,iGCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,qKC0B5BC,E,uKArBP,IAAIC,EAAUC,KAAKC,MAAMC,QAAQC,KAAI,SAAUC,GAC3C,OACI,kBAACC,EAAA,EAAKC,KAAN,CAAWC,KAAMH,EAAOI,MAAOJ,EAAOK,SAG9C,OACI,kBAACJ,EAAA,EAAD,CAAMK,MAAO,CAAEC,MAAO,UAClB,kBAACN,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMC,IAAKd,KAAKC,MAAMc,SACxC,kBAACV,EAAA,EAAKW,KAAN,KACI,kBAACX,EAAA,EAAKY,MAAN,KAAajB,KAAKC,MAAMiB,OACxB,kBAACb,EAAA,EAAKc,KAAN,KACKnB,KAAKC,MAAMmB,aAGfrB,Q,GAhBKsB,a,yDC2DXC,MApDf,SAAkBrB,GACd,OACI,kBAACsB,EAAA,EAAD,CAAWC,UAAU,sCACjB,kBAACC,EAAA,EAAD,CAAOC,GAAK,UAAUF,UAAY,OAAOV,IAAKa,IAAYC,eAAa,EAACC,OAAK,IAC7E,kBAACC,EAAA,EAAD,CAAWD,OAAK,GACZ,kBAACE,EAAA,EAAD,CAAKP,UAAU,0BACX,kBAACQ,EAAA,EAAD,KACI,wBAAIR,UAAU,gCAAd,eACA,wBAAIA,UAAU,+BAAd,eACA,wBAAIA,UAAU,0BAAd,oBAIZ,kBAACM,EAAA,EAAD,CAAWD,OAAK,EAACL,UAAY,QACzB,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKtB,MAAO,CAAEuB,QAAS,OAAQC,eAAgB,WAC3C,kBAAC,EAAD,CACIhB,MAAM,iBACNE,YAAY,yMACZL,OAAQoB,EAAQ,IAChBjC,QAAS,CACL,CAAEO,KAAM,OAAQD,KAAM,6CACtB,CAAEC,KAAM,UAAWD,KAAM,oCAIrC,kBAACwB,EAAA,EAAD,CAAKtB,MAAO,CAAEuB,QAAS,OAAQC,eAAgB,WAC3C,kBAAC,EAAD,CACIhB,MAAM,aACNE,YAAY,uGACZL,OAAQoB,EAAQ,IAChBjC,QAAS,CACL,CAAEO,KAAM,OAAQD,KAAM,4CAIlC,kBAACwB,EAAA,EAAD,CAAKtB,MAAO,CAAEuB,QAAS,OAAQC,eAAgB,WAC3C,kBAAC,EAAD,CACIhB,MAAM,WACNE,YAAY,qOACZL,OAAQoB,EAAQ,IAChBjC,QAAS,CACL,CAAEO,KAAM,OAAQD,KAAM,+CC1CvC4B,MARf,SAAenC,GACb,OACE,6BACE,uCCKSoC,MARf,SAAiBpC,GACf,OACE,6BACE,yCCcSqC,MAdf,WACI,OACI,4BAAQd,UAAY,iBAChB,kBAACM,EAAA,EAAD,CAAWD,OAAS,GAChB,kBAACE,EAAA,EAAD,CAAKP,UAAY,0CACb,kBAACQ,EAAA,EAAD,CAAKR,UAAY,qCAAjB,wB,wBCyCLe,MAnCf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAQ,UAAKC,GAAL,MACrB,yBAAKjB,UAAU,OACb,kBAACkB,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAActC,KAAK,KACjB,yBACEO,IAAMgC,IACNnC,MAAM,KACNoC,OAAO,KACPvB,UAAU,2BACVwB,IAAI,UAGR,kBAACN,EAAA,EAAOG,MAAR,CAActC,KAAK,KAAnB,eACA,kBAACmC,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBzB,GAAG,oBAClB,kBAAC0B,EAAA,EAAD,CAAK5B,UAAU,WACb,kBAAC4B,EAAA,EAAI9C,KAAL,CAAUC,KAAK,KAAf,YACA,kBAAC6C,EAAA,EAAI9C,KAAL,CAAUC,KAAK,UAAf,SACA,kBAAC6C,EAAA,EAAI9C,KAAL,CAAUC,KAAK,YAAf,cAKN,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAO,IAAKC,UAAWjC,IACpC,kBAAC,IAAD,CAAOgC,KAAO,SAAUC,UAAWnB,IACnC,kBAAC,IAAD,CAAOkB,KAAO,WAAYC,UAAWlB,IAErC,kBAAC,EAAD,SCjCYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ede2ee4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f328ac4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/jumbotronSquare.0bac8c0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/covid-pro-tips.a7dd8ade.png\";","module.exports = __webpack_public_path__ + \"static/media/unite-neat.acda77bb.png\";","module.exports = __webpack_public_path__ + \"static/media/vitality.899d6e89.jpg\";","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\n\nclass ProjectCard extends Component {\n    render() {\n        let element = this.props.buttons.map(function (object) { // for each element in the Roles array, display it https://stackoverflow.com/questions/37997893/promise-error-objects-are-not-valid-as-a-react-child\n            return (\n                <Card.Link href={object.link}>{object.name}</Card.Link>\n            );\n        })\n        return (\n            <Card style={{ width: '20rem' }}>\n                <Card.Img variant=\"top\" src={this.props.imgSrc} />\n                <Card.Body>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text>\n                        {this.props.description}\n                    </Card.Text>\n\n                    {element}\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default ProjectCard;","import React from \"react\";\nimport ProjectCard from \"../components/Card.js\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\n\nimport Background from \"../img/jumbotronSquare.jpg\";\n\nfunction Projects(props) {\n    return (\n        <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n            <Image id = \"profile\" className = \"py-5\" src={Background} roundedCircle fluid/>\n            <Container fluid>\n                <Row className=\"justify-content-center\" >\n                    <Col>\n                        <h1 className=\"display-1 font-weight-bolder\" >Jason Zhang</h1>\n                        <h3 className=\"display-4 font-weight-light\">My Projects</h3>\n                        <h3 className=\"lead font-weight-light\">Eastlake 2021</h3>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid className = \"py-5\">\n                <Row>\n                    <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                        <ProjectCard\n                            title=\"Covid Pro-Tips\"\n                            description=\"Responsive, interactive, and professional website hosted with a Node.js server running on an AWS Ubuntu EC2 instance fetching and displaying live Covid-19 data along interactive maps and datatables.\"\n                            imgSrc={require(\"../img/covid-pro-tips.png\")}\n                            buttons={[\n                                { name: \"Repo\", link: \"https://github.com/Zjjc123/Covid-Pro-Tips\" },\n                                { name: \"Website\", link: \"https://www.webcovid-19.live\" }\n                            ]}\n                        />\n                    </Col>\n                    <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                        <ProjectCard\n                            title=\"Unite NEAT\"\n                            description=\"Neural Evolution of Augmenting Topologies Implementation. Using Unity easy Graphical Implementations\"\n                            imgSrc={require(\"../img/unite-neat.png\")}\n                            buttons={[\n                                { name: \"Repo\", link: \"https://github.com/Zjjc123/UniteNEAT\" },\n                            ]}\n                        />\n                    </Col>\n                    <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                        <ProjectCard\n                            title=\"Vitality\"\n                            description=\"Mobile Fitness App built on Android Studio that provides a variety of health-related functionalities like heart rate monitoring and fitness counters. Complete with a minimalistic UI, profile settings, and pinned notifications.\"\n                            imgSrc={require(\"../img/vitality.jpg\")}\n                            buttons={[\n                                { name: \"Repo\", link: \"https://github.com/Zjjc123/Vitality\" },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        </Jumbotron>\n    )\n}\n\nexport default Projects;","import React from \"react\"\n \nfunction About(props) {\n  return (\n    <div>\n      <h1>About</h1>\n    </div>\n  )\n}\n \nexport default About;","import React from \"react\"\n \nfunction Gallery(props) {\n  return (\n    <div>\n      <h1>Gallery</h1>\n    </div>\n  )\n}\n \nexport default Gallery;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Footer() {\n    return (\n        <footer className = 'sticky-bottom'>\n            <Container fluid = {true}>\n                <Row className = \"border-top justify-content-between p-3\">\n                    <Col className = \"p-0 d-flex justify-content-center\">\n                        Jason Zhang 2020\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Route} from 'react-router-dom';\nimport Projects from './pages/Projects.js';\nimport About from './pages/About.js';\nimport Gallery from './pages/Gallery.js';\n\nimport Footer from './components/Footer.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">\n            <img\n              src= {logo}\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n              alt=\"Logo\"\n            />\n          </Navbar.Brand>\n          <Navbar.Brand href=\"/\">Jason Zhang</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Link href=\"/\">Projects</Nav.Link>\n              <Nav.Link href=\"/about\">About</Nav.Link>\n              <Nav.Link href=\"/gallery\">Gallery</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Route exact path= {'/'} component={Projects} />\n        <Route path= {'/about'} component={About} />\n        <Route path= {'/gallery'} component={Gallery} />\n\n        <Footer/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}